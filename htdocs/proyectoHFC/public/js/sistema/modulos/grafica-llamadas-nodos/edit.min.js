/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 136);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/administrador/modulos/grafica-llamadas-nodos/edit.js":
/*!***************************************************************************!*\
  !*** ./resources/js/administrador/modulos/grafica-llamadas-nodos/edit.js ***!
  \***************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _peticiones_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./peticiones.js */ "./resources/js/administrador/modulos/grafica-llamadas-nodos/peticiones.js");
/* harmony import */ var _globalResources_forms_valida_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/globalResources/forms/valida.js */ "./resources/js/globalResources/forms/valida.js");
/* harmony import */ var _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/globalResources/errors.js */ "./resources/js/globalResources/errors.js");



$(function () {
  $.ajaxSetup({
    headers: {
      'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
    }
  });
  $("#jefaturaLlamadasNodos").change(function () {
    // console.log("Se genero un change en el select de jefaturas..")
    var jefatura = $(this).val(); //console.log(jefatura);

    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].cargaNodosProjefatura(jefatura, function (res) {
      //Errores
      if (res.error == "failed") {
        // console.log("Error: ",res.errorThrown,res.jqXHR,res.textStatus) 
        //$("#resultado_cuarentenas_edit").html(`<div class="col-12 text-danger text-center">${res.jqXHR.responseText}</div>`); 
        //return false
        var erroresPeticion = "";

        if (res.jqXHR.status) {
          var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_2__["default"].codigos(res.jqXHR.status);
          erroresPeticion += "<strong> ".concat(mensaje, " : </strong>");
        }

        if (res.jqXHR.responseJSON) {
          if (res.jqXHR.responseJSON.mensaje) {
            var erroresMensaje = res.jqXHR.responseJSON.mensaje; //captura objeto

            var _mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_2__["default"].mensajeErrorJson(erroresMensaje);

            erroresPeticion += "<br/>" + _mensaje;
          }
        }

        erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente." : erroresPeticion;
        return false;
      } //console.log("la data return detalle es: ",res)


      $("#nodoLlamadasNodos").html("");
      $("#nodoLlamadasNodos").append("<option value=\"\">Todos</option>");
      res.response.nodos.forEach(function (el) {
        $("#nodoLlamadasNodos").append("<option value=\"".concat(el.nodo, "\">").concat(el.nodo, "</option>"));
      });
    });
  });
});

/***/ }),

/***/ "./resources/js/administrador/modulos/grafica-llamadas-nodos/peticiones.js":
/*!*********************************************************************************!*\
  !*** ./resources/js/administrador/modulos/grafica-llamadas-nodos/peticiones.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/globalResources/errors.js */ "./resources/js/globalResources/errors.js");
/* harmony import */ var _globalResources_modulos_grafico_nodos_lineal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/globalResources/modulos/grafico-nodos-lineal.js */ "./resources/js/globalResources/modulos/grafico-nodos-lineal.js");


var peticiones = {};

peticiones.resetInterval = function resetInterval() {
  if (INTERVAL_LOAD != null) {
    clearInterval(INTERVAL_LOAD);
    INTERVAL_LOAD = setInterval(function () {
      if (ESTA_ACTIVO_REFRESH) {
        $("#preloadCharger").html("");
        peticiones.cargandoPeticionPrincipal();
      }
    }, 60000);
  }
};

peticiones.getListaNodos = function getListaNodos(jefatura, nodo, callBack) {
  $.ajax({
    url: "/administrador/grafica-llamadas-nodos/lista-nodos-graficas",
    method: "get",
    async: true,
    data: {
      jefatura: jefatura,
      nodo: nodo
    },
    cache: false,
    dataType: "json"
  }).done(function (data) {
    //console.log("callbak antes del envio:",data)
    return callBack(data);
  }).fail(function (jqXHR, textStatus, errorThrown) {
    // console.log( "Request failed: " ,textStatus ,jqXHR,errorThrown);
    return callBack({
      "error": "failed",
      "jqXHR": jqXHR,
      "textStatus": textStatus,
      "errorThrown": errorThrown
    });
  });
};

peticiones.cargandoPeticionPrincipal = function cargandoPeticionPrincipal() {
  $("#contencionGraficaLlamadasNodos").html("");
  $("#preloadGraph").html("<div id=\"carga_person\" class=\"pre-estados-modems\">\n                                <div class=\"loader\">Loading...</div>\n                              </div>");
  var jefatura = $("#jefaturaLlamadasNodos").val();
  var nodo = $("#nodoLlamadasNodos").val() != '' ? $("#nodoLlamadasNodos").val() : '';
  peticiones.getListaNodos(jefatura, nodo, function (res) {
    var clock = new Date();
    var hour = clock.getHours();
    var minutes = clock.getMinutes();
    var seconds = clock.getSeconds();
    var print_clock = hour + ":" + minutes + ":" + seconds;

    if (REFRESH_PERMISO) {
      ESTA_ACTIVO_REFRESH = true;
      peticiones.resetInterval();
    }

    if (Object.keys(res.response.nodos).length === 0) {
      $("#preloadGraph").html(""); //$("#averiasJefTabFiltro").html("");

      $("#contencionGraficaLlamadasNodos").html("<div class=\"width-100\"><h2 class=\"text-center text-primary\"><b>Estimado usuario</b></h2>\n                                <h3 class=\"text-center text-danger\"><b>No tenemos nodos que superen los umbrales de llamadas ".concat(print_clock, "</b></h3></div>"));
    } else {
      res.response.nodos.forEach(function (el) {
        var grafico = _globalResources_modulos_grafico_nodos_lineal_js__WEBPACK_IMPORTED_MODULE_1__["default"].grafico(el.nodo);
      });
    }
  });
};

peticiones.cargaNodosProjefatura = function cargaNodosProjefatura(jefatura, callBack) {
  $.ajax({
    url: "/administrador/grafica-llamadas-nodos/jefatura-nodos",
    method: "get",
    async: true,
    data: {
      jefatura: jefatura
    },
    cache: false,
    dataType: "json"
  }).done(function (data) {
    //console.log("callbak antes del envio:",data)
    return callBack(data);
  }).fail(function (jqXHR, textStatus, errorThrown) {
    // console.log( "Request failed: " ,textStatus ,jqXHR,errorThrown);
    return callBack({
      "error": "failed",
      "jqXHR": jqXHR,
      "textStatus": textStatus,
      "errorThrown": errorThrown
    });
  });
};

/* harmony default export */ __webpack_exports__["default"] = (peticiones);

/***/ }),

/***/ "./resources/js/globalResources/errors.js":
/*!************************************************!*\
  !*** ./resources/js/globalResources/errors.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var errors = {};

errors.codigos = function codigos(codigo) {
  var texto = "";

  if (codigo == 401) {
    location.reload();
    texto = "Sesi\xF3n terminada.";
  }

  switch (codigo) {
    case 204:
      texto = "La petici\xF3n se ha completado con \xE9xito pero su respuesta no tiene ning\xFAn contenido.";
      break;

    case 401:
      texto = "Su sesi\xF3n expiro.";
      break;

    case 403:
      texto = "Petici\xF3n no autoriazada.";
      break;

    case 404:
      texto = "Petici\xF3n no encontrada.";
      break;

    case 405:
      texto = "Error en el servicio. Intente nuevamente.";
      break;

    case 409:
      texto = "Conflicto de petici\xF3n en el servidor. Intente nuevamente. Si persiste el error, actualizar la Web.";
      break;

    case 422:
      texto = "No se puede procesar la petici\xF3n. Verifique los datos enviados.";
      break;

    case 500:
      texto = "Falla inesperada. Intente nuevamente.";
      break;

    default:
      texto = "Falla inesperada con la petici\xF3n. Intente nuevamente.";
      break;
  }

  return texto;
};

errors.mensajeErrorJson = function mensajeErrorJson(erroresJson) {
  //console.log("el tipo de mensaje es:",typeof(erroresJson),erroresJson)
  if (typeof erroresJson == "string") {
    return erroresJson;
  } //recorreo objeto como array


  var msj = "";
  Object.keys(erroresJson).forEach(function (key) {
    //console.log("El key es: -",key,"-")
    if (!isNaN(key)) {
      msj += "<li>".concat(erroresJson[key], "</li>");
    } else {
      msj += "".concat(key, " : ").concat(erroresJson[key], " <br/>");
    }
  });
  return msj;
};

/* harmony default export */ __webpack_exports__["default"] = (errors);

/***/ }),

/***/ "./resources/js/globalResources/forms/valida.js":
/*!******************************************************!*\
  !*** ./resources/js/globalResources/forms/valida.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//validaciones
var valida = {};

valida.isValidEmail = function isValidEmail(mail) {
  return /^\w+([\.\+\-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,4})+$/.test(mail);
};

valida.isValidText = function isValidText(text) {
  return text.trim() != '';
};

valida.isValidPassword = function isValidPassword(password) {
  return /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(password);
};

valida.isValidNumber = function isValidNumber(text) {
  return /^[0-9]+$/.test(text); //solo numeros
};

valida.isValidPrecios = function isValidPrecios(text) {
  return /^[0-9]\d*(\.\d+)?$/.test(text);
};

valida.isValidLetters = function isValidLetters(text) {
  // return /^[a-zA-Z]+(\s*[a-zA-Z]*)*[a-zA-Z]+$/.test(text)//solo letras y espacios intermedios
  return /^[a-zA-ZÀ-ÿ\:._-]+(\s*[a-zA-ZÀ-ÿ\:._-]*)*[a-zA-ZÀ-ÿ\:._-]+$/.test(text); //solo letras y espacios intermedios + cracteres
  //return /^[a-zA-Z]+$/.test(text)
};

valida.isValidaTextArea = function isValidaTextArea(text) {
  return /^[a-zA-ZÀ-ÿ0-9\:._-]+(\s*[a-zA-ZÀ-ÿ0-9\:._-]*)*[a-zA-ZÀ-ÿ0-9\:._-]+$/.test(text); //solo letras y espacios intermedios
  //return /^[a-zA-Z]+$/.test(text)
};

valida.isValidAlfaNumerico = function isValidAlfaNumerico(text) {
  return /^[a-zA-Z0-9]+$/.test(text); //solo letras y numeros
  //return /^[a-zA-Z]+$/.test(text)
};

valida.isValidDecimalPositiveAndNegative = function isValidDecimalPositiveAndNegative(text) {
  return /^-?[0-9]\d*(\.\d+)?$/.test(text); //solo letras y numeros
  //return /^[a-zA-Z]+$/.test(text)
};

valida.isValidateInputText = function isValidateInputText(campo) {
  campo.addClass("valida-error-input");
};

valida.isValidateCampoHtml = function isValidateCampoHtml(campo) {
  campo.addClass("valida-error-html");
};

/* harmony default export */ __webpack_exports__["default"] = (valida);

/***/ }),

/***/ "./resources/js/globalResources/modulos/grafico-nodos-lineal.js":
/*!**********************************************************************!*\
  !*** ./resources/js/globalResources/modulos/grafico-nodos-lineal.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/globalResources/errors.js */ "./resources/js/globalResources/errors.js");

var graficaLlamadasNodos = {};

graficaLlamadasNodos.grafico = function grafico(nodo) {
  $("#contencionGraficaLlamadasNodos").append("\n                <div id=\"".concat(nodo, "\" class=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4 contenido-border\" style=\"padding-top: 18px;\n                padding-bottom: 18px;\"> </div>\n        "));
  $.ajax({
    url: "/administrador/grafica-llamadas-nodos/graficas-nodos-lineal",
    method: "post",
    async: true,
    //dataType: "json",
    data: {
      nodo: nodo
    },
    cache: false
  }).done(function (data) {
    //console.log("El resultado ess:",data);
    $("#preloadGraph").html("");
    var estado = data.response.estado;
    var colores = data.response.colorGraficaLlamadasNodos;
    var resultHoraTotal = data.response.resultHoraTotal;
    var tok = $('meta[name="csrf-token"]').attr('content');
    var chartDataHisTroba = [{
      name: "Promedio",
      data: [],
      color: colores[0].color
    }, {
      name: "Hoy_MartesA",
      data: [],
      color: colores[1].color
    }];
    var grafico_data = data.response.data;
    var chartData = [];
    var dia = '';
    var ult_reg = resultHoraTotal[0].hora != null ? 'ULT REG: ' + resultHoraTotal[0].hora : '';
    var hora_total = resultHoraTotal[0].total != null ? 'Son ' + resultHoraTotal[0].total + ' Llamadas en DMPE' : '';
    grafico_data.forEach(function (el) {
      chartDataHisTroba[0].data.push([el.hora, parseFloat(el.prom)]);
      chartDataHisTroba[1].data.push([el.hora, parseFloat(el.hoy)]);
      chartData.push(el.hora);
      dia = el.desdia;
    });
    chartDataHisTroba[1]['name'] = 'Hoy_' + dia;
    Highcharts.setOptions({
      // Highcharts/modules/masters/highcharts.sr.js/defaultOptions/lang/months ....
      lang: {
        months: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
        weekdays: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sabado'],
        resetZoom: "Restablecer Zoom"
      }
    });
    Highcharts.chart(nodo, {
      title: {
        text: "CENTRO DE CONTROL MOVISTAR1"
      },
      subtitle: {
        useHTML: true,
        text: "<span class=\"center-display\">".concat(ult_reg, " </span><br> <span class=\"center-display\"> ").concat(hora_total, " </span><br> <span class=\"text-primary center-display\"><b> Nodo: </b> \n                                                        <form method=\"post\" action=\"/administrador/llamadas-troba\" class=\"d-inline\">\n                                                                <input type=\"hidden\" name=\"_token\" value=\"").concat(tok, "\">\n                                                                <input type=\"hidden\" name=\"nodo\" value=\"").concat(nodo, "\">  \n                                                                <input type=\"hidden\" name=\"grafica\" value=\"true\">\n                                                                <button type=\"submit\" title=\"Ver Llamadas por Troba\" class=\"btn btn-link formato-link text-danger\"><b>").concat(nodo, "</b></button>\n                                                        </form>\n                                                </span>")
      },
      xAxis: {
        categories: chartData,
        minRange: 1
      },
      yAxis: {
        title: {
          text: 'Promedio'
        }
      },
      legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle'
      },
      plotOptions: {
        area: {
          fillColor: {
            linearGradient: {
              x1: 0,
              y1: 0,
              x2: 0,
              y2: 1
            },
            stops: [[0, Highcharts.getOptions().colors[0]], [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]]
          },
          lineWidth: 1
        }
      },
      series: chartDataHisTroba,
      responsive: {
        rules: [{
          condition: {
            maxWidth: 500
          },
          chartOptions: {
            legend: {
              layout: 'horizontal',
              align: 'center',
              verticalAlign: 'bottom'
            }
          }
        }]
      }
    });
  }).fail(function (jqXHR, textStatus) {
    //console.log('error en fail')
    $("#preloadGraph").html(""); // return false;

    var erroresPeticion = "";

    if (jqXHR.responseJSON) {
      if (jqXHR.responseJSON.mensaje) {
        var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto
        //console.log( "erroresMensaje: " + erroresMensaje); //erroresMensaje: Para procesar la gráfica, se requiere el puerto.
        //Para que funcione errors agregar la linea --> import errors from '@/globalResources/errors'

        var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].mensajeErrorJson(erroresMensaje); //console.log( "mensaje: " + mensaje);

        erroresPeticion += mensaje;
      }
    }

    if (jqXHR.status) {
      var _mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].codigos(jqXHR.status);

      erroresPeticion += "<br> " + _mensaje; //console.log( "erroresPeticion: " + erroresPeticion);
    }

    erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente." : erroresPeticion;

    if (erroresPeticion) {
      $("#body-errors-modal").html("<div class='msg_request_error'>".concat(erroresPeticion, "</div>")); //$('#errorsModal').modal('show')
    }

    return false;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (graficaLlamadasNodos);

/***/ }),

/***/ 136:
/*!*********************************************************************************!*\
  !*** multi ./resources/js/administrador/modulos/grafica-llamadas-nodos/edit.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\laragon\www\new_system\resources\js\administrador\modulos\grafica-llamadas-nodos\edit.js */"./resources/js/administrador/modulos/grafica-llamadas-nodos/edit.js");


/***/ })

/******/ });