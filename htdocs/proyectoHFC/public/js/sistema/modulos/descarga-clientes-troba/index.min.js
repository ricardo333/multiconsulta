/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 78);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/administrador/modulos/descarga-clientes-troba/index.js":
/*!*****************************************************************************!*\
  !*** ./resources/js/administrador/modulos/descarga-clientes-troba/index.js ***!
  \*****************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _peticiones_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./peticiones.js */ "./resources/js/administrador/modulos/descarga-clientes-troba/peticiones.js");
/* harmony import */ var _globalResources_modulos_diagnostico_masivo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/globalResources/modulos/diagnostico-masivo.js */ "./resources/js/globalResources/modulos/diagnostico-masivo.js");
/* harmony import */ var _globalResources_modulos_historico_nodo_trobas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/globalResources/modulos/historico-nodo-trobas.js */ "./resources/js/globalResources/modulos/historico-nodo-trobas.js");
/* harmony import */ var _globalResources_modulos_mapa_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/globalResources/modulos/mapa.js */ "./resources/js/globalResources/modulos/mapa.js");




$(function () {
  $.ajaxSetup({
    headers: {
      'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
    }
  });
  $('[name="SearchDualList1"]').keyup(function (e) {
    var code = e.keyCode || e.which; //if (code == '9') return;
    //if (code == '27') $(this).val(null);
    //var $rows = $(this).closest('.dual-list').find('#interfacesLista option');

    if (code == 13) {
      $(this).prop("disabled", true);
      var palabraBusca = $(this).val();

      if (palabraBusca.trim() != "") {
        $("#interfacesLista").html("");
        DATA_INTERFACES.forEach(function (el) {
          if (el.toLowerCase().indexOf(palabraBusca.toLowerCase()) != -1) {
            $("#interfacesLista").append("<option value=\"".concat(el, "\">").concat(el, "</option>"));
          }
        });
      }

      $(this).prop("disabled", false);
    }

    if ($(this).val() == "" && code != 13) {
      $(this).prop("disabled", true); //$(this).prop("disabled",true)
      // document.getElementById().disabled = true

      $("#interfacesLista").html("");
      DATA_INTERFACES.forEach(function (el) {
        $("#interfacesLista").append("<option value=\"".concat(el, "\">").concat(el, "</option>"));
      });
      $(this).prop("disabled", false);
    }

    $(this).focus();
  });
  $('[name="SearchDualList2"]').keyup(function (e) {
    var code = e.keyCode || e.which;
    if (code == '9') return;
    if (code == '27') $(this).val(null);
    var $rows = $(this).closest('.dual-list').find('#interfaces option');
    var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();
    $rows.show().filter(function () {
      var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
      return !~text.indexOf(val);
    }).hide();
  });
  $("#btnLeftTrobas").click(function () {
    var datos1 = document.getElementById("interfacesLista");
    var datos2 = document.getElementById("interfaces");
    var collection = datos2.selectedOptions;
    var cantidad = collection.length;

    for (var i = 0; i < cantidad; i++) {
      var valor = collection[i].text;
      var option = document.createElement('option');
      option.text = collection[i].text;
      datos1.add(option);
    }

    $.each($('[name="duallistbox_demo2"] option:selected'), function (index, value) {
      DATA_INTERFACES.push(value.value);
      $(this).remove();
    });
  });
  $("#btnRightTrobas").click(function () {
    var datos1 = document.getElementById("interfacesLista");
    var datos2 = document.getElementById("interfaces");
    var collection = datos1.selectedOptions;
    var cantidad = collection.length;

    for (var i = 0; i < cantidad; i++) {
      var valor = collection[i].text;
      var option = document.createElement('option');
      option.text = collection[i].text;
      datos2.add(option);
    }

    $.each($('[name="duallistbox_demo1"] option:selected'), function (index, value) {
      var nuevoArrayInterfaces = DATA_INTERFACES.filter(function (palabra) {
        if (palabra.toLowerCase() != value.value.toLowerCase()) {
          return palabra;
        }
      });
      DATA_INTERFACES = nuevoArrayInterfaces;
      $(this).remove();
    });
  });
  $(".return_resultado_filtros").click(function () {
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($("#resultadoFiltroResultPrincipalTab"));
  });
  $(".return_troba_clientes").click(function () {
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($("#contentFiltrosTrobasClientTab"));
    $("#resultadoContentFiltroCliente").html("");
  }); //Maximizar

  $(".maxi_tab").click(function () {
    $("#tabsDescargaClientesTrobaContent").toggleClass("fullscreen");

    if ($("#tabsDescargaClientesTrobaContent").hasClass("fullscreen")) {
      // console.log("tiene la clase full ")
      $(".maxi_tab").html('<i class="icofont-close-line-squared-alt"></i>');
    } else {
      //console.log("no tiene la clase full ")
      $(".maxi_tab").html('<i class="icofont-maximize"></i>');
    }
  });
  $("#filtroPrincipalProceso").click(function () {
    //-----Obtener Valores de Interfaces Seleccionadas-----//
    var cantidad = document.getElementById("interfaces").options.length;
    var valores = [];

    for (var i = 0; i < cantidad; i++) {
      var selectValue = document.getElementById("interfaces").options[i].value;
      valores[i] = selectValue;
    }

    var interfaces = valores;
    var trobas = $("#listaTrobas").val();
    var nivelesPorPuerto = $("#listaNivelesPuerto").val(); //console.log("las interfaces a enviar son:",interfaces)

    $("#respuestaFiltroClienteTroba").html("<div id=\"carga_person\">\n                                                <div class=\"loader\">Loading...</div>\n                                        </div>");
    $("#contentFiltroClientTroba").addClass("d-none");
    $.ajax({
      url: "/administrador/descarga-clientes-troba/filtro",
      method: "get",
      data: {
        interfaces: interfaces,
        trobas: trobas,
        nivelesPorPuerto: nivelesPorPuerto
      },
      dataType: "json"
    }).done(function (data) {
      $("#respuestaFiltroClienteTroba").html("");
      $("#contentFiltroClientTroba").removeClass("d-none"); //console.log(data) 

      var resultado = data.response;
      var estructuraPrincipal = "";

      if (resultado.hayFiltroInterfaces) {
        var estructuraFiltroInterfaces = "<div class=\"col-md-6\">";
        var _interfaces = resultado.dataInterfaces.interfaces;
        var dataInterfaces = resultado.dataInterfaces.data;
        estructuraFiltroInterfaces += "<div class=\"card p-2\">\n                                                <h6 class=\"text-center text-sm font-weight-bold\">\n                                                Resultado de Interfaces: <span style=\"font-size:10px;\">(".concat(_interfaces, ")</span>\n                                            </h6>");
        var descargaTrobaPuertos = "<button  data-uno=\"".concat(_interfaces, "\"class=\"btn btn-outline-primary btn-sm shadow-sm my-1 mx-auto w-75\" id=\"descargarTrobaPuertos\">Descargar Troba Puertos <i class=\"icofont-cloud-download icofont-lg\"></i></button >");
        var cantidadTrobasPorPuerto = "<a href=\"javascript:void(0)\" data-uno=\"".concat(dataInterfaces, "\" class=\"btn btn-sm btn-outline-info shadow-sm my-1 mx-auto w-75\" id=\"verListaCantidadTrobasPorPuerto\">Lista Cantidad Trobas por Puerto <i class=\"icofont-hand-drawn-right icofont-lg\"></i></a>");
        estructuraFiltroInterfaces += descargaTrobaPuertos;
        estructuraFiltroInterfaces += cantidadTrobasPorPuerto; // estructuraFiltroInterfaces += listaTrobasPuertosCantidad

        estructuraFiltroInterfaces += "</div>";
        estructuraFiltroInterfaces += "</div>";
        estructuraPrincipal += estructuraFiltroInterfaces;
      }

      if (resultado.hayFiltroTrobas) {
        var estructuraFiltroTroba = "<div class=\"col-md-6\">";
        var nodo = resultado.dataTroba.nodo;
        var troba = resultado.dataTroba.troba;
        estructuraFiltroTroba += "<div class=\"card p-2\">\n                                            <h6 class=\"text-center text-sm font-weight-bold\">\n                                                Resultado de Nodo - Troba (".concat(nodo, " - ").concat(troba, ")\n                                            </h6>");
        var descargaTroba = "<button  data-uno=\"".concat(nodo, "\" data-dos=\"").concat(troba, "\" class=\"btn btn-outline-primary btn-sm shadow-sm my-1 mx-auto w-75\" id=\"descargarTroba\">Descargar Troba <i class=\"icofont-cloud-download icofont-lg\"></i></button >");
        var DiagnosticoMasivo = "<a href=\"javascript:void(0)\" data-uno=\"".concat(nodo, "\" data-dos=\"").concat(troba, "\" class=\"btn btn-outline-danger btn-sm shadow-sm my-1 mx-auto w-75\" id=\"verDiagnosticoMasivo\">Diagnostico masivo <i class=\"icofont-hand-drawn-right icofont-lg\"></i></a>");
        var historicoNivelesTroba = "<a href=\"javascript:void(0)\" data-uno=\"".concat(nodo, "\" data-dos=\"").concat(troba, "\" class=\"btn btn-outline-info btn-sm shadow-sm my-1 mx-auto w-75\" id=\"verHistoricoNodoTroba\">Hist\xF3rico Niveles de Trobas <i class=\"icofont-hand-drawn-right icofont-lg\"></i></a>");

        var _mapa = "<a href=\"javascript:void(0)\" data-uno=\"".concat(nodo, "\" data-dos=\"").concat(troba, "\"   class=\"btn btn-outline-success btn-sm shadow-sm my-1 mx-auto w-75\" id=\"verMapa\" alt=\"Ver Mapa\" title=\"Ver Mapa\">\n                                        Ver Mapa <i class=\"icofont-google-map icofont-lg\"></i>\n                            </a>");

        estructuraFiltroTroba += descargaTroba;
        estructuraFiltroTroba += DiagnosticoMasivo;
        estructuraFiltroTroba += historicoNivelesTroba;
        estructuraFiltroTroba += _mapa;
        estructuraFiltroTroba += "</div>";
        estructuraFiltroTroba += "</div>";
        estructuraPrincipal += estructuraFiltroTroba;
      }

      if (resultado.hayFiltroNiveles) {
        var estructuraFiltroNiveles = "<div class=\"col-md-6\">";
        var puerto = resultado.dataNiveles.puerto;
        estructuraFiltroNiveles += "<div class=\"card p-2\">\n                                        <h6 class=\"text-center text-sm font-weight-bold\">\n                                            Puerto : ".concat(puerto, "\n                                        </h6>");
        var listaNivelesPuerto = "<a href=\"javascript:void(0)\" data-uno=\"".concat(puerto, "\" class=\"btn btn-outline-success btn-sm shadow-sm my-1 mx-auto w-75\" id=\"verPromediosNivelesCmtsPorPuerto\"> Promedios Niveles CMTS por Puerto <i class=\"icofont-hand-drawn-right icofont-lg\"></i></a>");
        estructuraFiltroNiveles += listaNivelesPuerto;
        estructuraFiltroNiveles += "</div>";
        estructuraFiltroNiveles += "</div>";
        estructuraPrincipal += estructuraFiltroNiveles;
      }

      _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($("#resultadoFiltroResultPrincipalTab"));
      $("#resultadoContentFiltroCliente").html(estructuraPrincipal);
    }).fail(function (jqXHR, textStatus) {
      $("#respuestaFiltroClienteTroba").html("");
      $("#contentFiltroClientTroba").removeClass("d-none"); //console.log( "Error: " ,jqXHR, textStatus);
      //console.log( "Request failed: " ,jqXHR.responseJSON.mensaje);
      // $("#respuestaFiltroClienteTroba").html(jqXHR.responseText)
      // return false

      var erroresPeticion = "";

      if (jqXHR.responseJSON) {
        if (jqXHR.responseJSON.mensaje) {
          var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto

          var mensaje = errors.mensajeErrorJson(erroresMensaje);
          erroresPeticion += mensaje;
        }
      }

      if (jqXHR.status) {
        var _mensaje = errors.codigos(jqXHR.status);

        erroresPeticion += "<br> " + _mensaje;
      }

      erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente." : erroresPeticion;
      $("#respuestaFiltroClienteTroba").html(erroresPeticion);
      return false;
    });
  }); //Lista Cantidad Trobas por Puerto

  $("body").on("click", "#verListaCantidadTrobasPorPuerto", function () {
    //$("#listaCantidadTrobPuerto").modal("show")
    var interfaces = $(this).data("uno");
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].cantidadTrobasPorInterfaces(interfaces);
  }); //Descargar Troba por puerto

  $("body").on("click", "#descargarTrobaPuertos", function () {
    var interfaces = $(this).data("uno");

    var _this = $(this);

    _this.prop('disabled', true);

    _this.html("Descargar Troba Puertos <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        <span class=\"sr-only\">Descargando..</span>");

    $.ajax({
      xhrFields: {
        responseType: 'blob'
      },
      url: "/administrador/descarga-clientes-troba/excel/clientes-troba-puertos",
      method: 'get',
      data: {
        interfaces: interfaces
      },
      cache: false
    }).done(function (result) {
      _this.prop('disabled', false);

      _this.html("Descargar Troba <i class=\"icofont-cloud-download icofont-lg\"></i>");

      var blob = new Blob([result], {
        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
      });
      var link = document.createElement('a');
      link.href = window.URL.createObjectURL(blob);
      link.download = 'trobas_por_puertos.xlsx';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }).fail(function (xhr, jqXHR, textStatus) {
      _this.prop('disabled', false);

      _this.html("Descargar Troba Puertos <i class=\"icofont-cloud-download icofont-lg\"></i>");

      var errorMessage1 = xhr.status + ': ' + "Hubo un error en los datos, intente en un minuto por favor.";
      $("#body-errors-modal").html("<div class=\"w-100 text-center text-danger\">".concat(errorMessage1, "</div>"));
      $('#errorsModal').modal('show');
      return false;
    });
  }); //Descargar Troba

  $("body").on("click", "#descargarTroba", function () {
    var nodo = $(this).data("uno");
    var troba = $(this).data("dos");

    var _this = $(this);

    _this.prop('disabled', true);

    _this.html(" Descargar Troba <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        <span class=\"sr-only\">Descargando..</span>");

    $.ajax({
      xhrFields: {
        responseType: 'blob'
      },
      url: "/administrador/descarga-clientes-troba/excel/clientes-troba",
      method: 'get',
      data: {
        nodo: nodo,
        troba: troba
      },
      cache: false
    }).done(function (result) {
      _this.prop('disabled', false);

      _this.html("Descargar Troba <i class=\"icofont-cloud-download icofont-lg\"></i>");

      var blob = new Blob([result], {
        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
      });
      var link = document.createElement('a');
      link.href = window.URL.createObjectURL(blob);
      link.download = 'clientes_por_troba.xlsx';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }).fail(function (xhr, jqXHR, textStatus) {
      _this.prop('disabled', false);

      _this.html("Descargar Troba <i class=\"icofont-cloud-download icofont-lg\"></i>");

      var errorMessage1 = xhr.status + ': ' + "Hubo un error en los datos, intente en un minuto por favor.";
      $("#body-errors-modal").html("<div class=\"w-100 text-center text-danger\">".concat(errorMessage1, "</div>"));
      $('#errorsModal').modal('show');
      return false;
    });
  }); //DM

  $("body").on("click", "#verDiagnosticoMasivo", function () {
    // console.log("Ver diagnostico masivo")
    var n = $(this).data("uno");
    var t = $(this).data("dos");
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($('#verDiagMasTab'));
    var parametros = {
      'n': n,
      't': t
    };
    _globalResources_modulos_diagnostico_masivo_js__WEBPACK_IMPORTED_MODULE_1__["default"].lista($('#resultDiagnosticoMasivo'), '/administrador/descarga-clientes-troba/diagnostico-masivo/view', parametros);
  }); //Historico Trobas

  $("body").on("click", "#verHistoricoNodoTroba", function () {
    var nodo = $(this).data("uno");
    var troba = $(this).data("dos");
    var parametros = {
      'nodo': nodo,
      'troba': troba
    };
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($('#historicoNodoTrobaTab'));
    $("#historico_nodo_troba_actual").html("".concat(nodo, " - ").concat(troba));
    _globalResources_modulos_historico_nodo_trobas_js__WEBPACK_IMPORTED_MODULE_2__["default"].verHistorialNodoTroba($("#resultHistoricoNodoTroba"), '/administrador/descarga-clientes-troba/historico/nodo-troba', parametros, false);
  }); //Mapa

  $(".return_verMapaTab").click(function () {
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($('#verMapaTab'));
  });
  $("body").on("click", "#verMapa", function () {
    var n = $(this).data("uno");
    var t = $(this).data("dos");
    var id = 0;
    var parametros = {
      n: n,
      t: t,
      id: id //console.log("parametros a enviar del mapa son: ",parametros)

    };
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($('#verMapaTab'));
    _globalResources_modulos_mapa_js__WEBPACK_IMPORTED_MODULE_3__["default"].vistaGeneral($("#mapa_content_carga"), "/administrador/descarga-clientes-troba/mapa/view", parametros);
  }); //Edificios

  $("body").on("click", ".show_edificio_details", function () {
    // console.log("debe mostrar los edificios...")
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($('#detalleEdificiosTab'));
    var des_dtt = $(this).data("desdtt");
    var des_via = $(this).data("nomvia");
    var des_puer = $(this).data("numpuer");
    var parametros = {
      'des_dtt': des_dtt,
      'des_via': des_via,
      'des_puer': des_puer
    };
    _globalResources_modulos_mapa_js__WEBPACK_IMPORTED_MODULE_3__["default"].detallesEdificios($('#edificios_content_general'), '/administrador/descarga-clientes-troba/mapa/edificios/view', parametros);
  }); //Promedio Niveles CMTS por puerto

  $("body").on("click", "#verPromediosNivelesCmtsPorPuerto", function () {
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($("#listaPromedioNivelesCmtsPuerto"));
    var puerto = $(this).data("uno");
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].cargaPromedioNivelesCmtsPorPuerto($("#resultPromedioNivelesPuerto"), "/administrador/descarga-clientes-troba/puerto/promedio-niveles-cmts", puerto);
  }); //Historico de niveles CMTS por puerto

  $("body").on("click", ".verHistoricoNivelesCmtsPorPuerto", function () {
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($("#listaHistoricoNivelesCmtsPuerto"));
    var puerto = $(this).data("uno");
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].cargaHistoricoNivelesCmtsPorPuerto($("#resultHistoricoNivelesPuerto"), "/administrador/descarga-clientes-troba/puerto/historico-niveles-cmts", puerto);
  }); //Cablemodem SNR

  $("body").on("click", ".verSnrCablemodem", function () {
    var puerto = $(this).data("uno");

    var _this = $(this);

    var textoDesc = $(this).text();

    _this.prop('disabled', true);

    _this.html(" ".concat(textoDesc, " <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        <span class=\"sr-only\">Descargando..</span>"));

    $.ajax({
      xhrFields: {
        responseType: 'blob'
      },
      url: "/administrador/descarga-clientes-troba/excel/puerto/srn-cablemodem",
      method: 'get',
      data: {
        puerto: puerto
      },
      cache: false
    }).done(function (result) {
      _this.prop('disabled', false);

      _this.html(" ".concat(textoDesc));

      var blob = new Blob([result], {
        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
      });
      var link = document.createElement('a');
      link.href = window.URL.createObjectURL(blob);
      link.download = 'cablemodem_snr.xlsx';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }).fail(function (xhr, jqXHR, textStatus) {
      _this.prop('disabled', false);

      _this.html(" ".concat(textoDesc)); //console.log(xhr)
      //console.log(jqXHR)
      //console.log(textStatus)


      var errorMessage1 = "Hubo un error en los datos, intente en un minuto por favor.";
      $("#body-errors-modal").html("<div class=\"w-100 text-center text-danger\">".concat(errorMessage1, "</div>"));
      $('#errorsModal').modal('show');
      return false;
    });
  });
});

/***/ }),

/***/ "./resources/js/administrador/modulos/descarga-clientes-troba/peticiones.js":
/*!**********************************************************************************!*\
  !*** ./resources/js/administrador/modulos/descarga-clientes-troba/peticiones.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/globalResources/errors.js */ "./resources/js/globalResources/errors.js");

var peticiones = {};

peticiones.redirectTabs = function redirectTabs(identificador) {
  $('#tabsDescargaClientesTrobaContent > .tab-pane').removeClass('show');
  $('#tabsDescargaClientesTrobaContent > .tab-pane').removeClass('active');
  identificador.tab('show');
};

peticiones.cargaInterfaces = function cargaInterfaces() {
  $.ajax({
    url: "/administrador/descarga-clientes-troba/interfaces/list",
    method: "get",
    dataType: "json"
  }).done(function (data) {
    //console.log(data) 
    var respuesta = data.response;

    if (respuesta.cantidad > 0) {
      //console.log("hay mucha data y se procesará")
      var estructuraSelectMultiple = "";
      respuesta.lista.forEach(function (el) {
        estructuraSelectMultiple += "<option value=\"".concat(el.interbus, "\">").concat(el.interbus, "</option>");
        DATA_INTERFACES.push(el.interbus);
      });
      $("#interfacesLista").html(estructuraSelectMultiple); // console.log("la data cargada de options son: ",DATA_INTERFACES)
    } else {
      $("#interfacesLista").html("<option>Sin data disponible</option>");
    }

    $("#preloadFiltrosGenerales").html("");
    $("#preloadFiltrosGenerales").addClass("d-none");
    $("#contentFiltroClientTroba").removeClass("d-none");
  }).fail(function (jqXHR, textStatus) {
    //console.log("error",jqXHR, textStatus)
    //$("#body-errors-modal").html(jqXHR.responseText)
    //$('#errorsModal').modal('show') 
    // return false
    var erroresPeticion = "";

    if (jqXHR.responseJSON) {
      if (jqXHR.responseJSON.mensaje) {
        var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto

        var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].mensajeErrorJson(erroresMensaje);
        erroresPeticion += mensaje;
      }
    }

    if (jqXHR.status) {
      var _mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].codigos(jqXHR.status);

      erroresPeticion += "<br> " + _mensaje;
    }

    erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente recargando la web." : erroresPeticion;
    $("#body-errors-modal").html(erroresPeticion);
    $('#errorsModal').modal('show');
    return false;
  });
};

peticiones.cantidadTrobasPorInterfaces = function cantidadTrobasPorInterfaces(interfaces) {
  $("#listaCantidadTrobPuerto").modal("show");
  $("#resultadoCantidadListaTrobasP").html("<div id=\"carga_person\">\n                                                <div class=\"loader\">Loading...</div>\n                                            </div>");
  $.ajax({
    url: "/administrador/descarga-clientes-troba/interface/cantidad-trobas",
    method: "get",
    data: {
      interfaces: interfaces
    },
    dataType: "json"
  }).done(function (data) {
    var cantidadDataInterfaces = data.response.cantidad;

    if (cantidadDataInterfaces > 0) {
      var dataInterfaces = data.response.lista;
      var listaTrobasCountPuert = "<div class=\"table-responsive\">";
      listaTrobasCountPuert += "<table class=\"table table-bordered w-auto m-auto table-hover\">";
      listaTrobasCountPuert += "<thead>\n                                              <tr>\n                                                  <th>Nodo</th>\n                                                  <th>Troba</th>\n                                                  <th>Clientes</th>\n                                              </tr>\n                                          </thead>";
      dataInterfaces.forEach(function (el) {
        listaTrobasCountPuert += "<tbody>\n                                                  <tr> \n                                                      <td>".concat(el.nodo, "</td>\n                                                      <td>").concat(el.troba, "</td>\n                                                      <td>").concat(el.cant, "</td>\n                                                  </tr>\n                                              </tbody>");
      });
      listaTrobasCountPuert += "</table>";
      listaTrobasCountPuert += "<div>";
      $("#resultadoCantidadListaTrobasP").html(listaTrobasCountPuert);
    } else {
      $("#resultadoCantidadListaTrobasP").html("<div class=\"w-100 text-center text-danger\">No se encontraron trobas en las interfaces enviadas.</div>");
    }
  }).fail(function (jqXHR, textStatus) {
    //console.log("error",jqXHR, textStatus)
    //$("#resultadoCantidadListaTrobasP").html(jqXHR.responseText)
    //return false
    var erroresPeticion = "";

    if (jqXHR.responseJSON) {
      if (jqXHR.responseJSON.mensaje) {
        var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto

        var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].mensajeErrorJson(erroresMensaje);
        erroresPeticion += mensaje;
      }
    }

    if (jqXHR.status) {
      var _mensaje2 = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].codigos(jqXHR.status);

      erroresPeticion += "<br> " + _mensaje2;
    }

    erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente recargando la web." : erroresPeticion;
    $("#resultadoCantidadListaTrobasP").html("<div class=\"text-danger text-center w-100\">".concat(erroresPeticion, "</div>"));
    return false;
  });
};

peticiones.cargaPromedioNivelesCmtsPorPuerto = function cargaPromedioNivelesCmtsPorPuerto(tabla, ruta, puerto) {
  tabla.DataTable({
    "destroy": true,
    "processing": true,
    "serverSide": true,
    "dom": '<"row mx-0"' + '<"col-12 col-sm-6"l>>' + '<"row"' + '<"col-sm-12 px-0 table-responsive tableFixHead"t>>' + '<"row"' + '<"col-12 col-sm-5"i><"col-12 col-sm-7"p>>' + 'r',
    "ajax": {
      'url': ruta,
      "type": "GET",
      "dataType": "json",
      "data": function data(d) {
        d.puerto = puerto;
      },
      'dataSrc': function dataSrc(json) {
        //console.log("Termino la carga asi tenga error.. :",json)
        //return json
        var result = json.data; //  console.log("El result es: ",result)

        for (var index = 0; index < result.length; index++) {
          result[index].interfaceCol = "<a href=\"javascript:void(0)\" data-uno=\"".concat(result[index].cmts).concat(result[index].Interface, "\"  class=\"verHistoricoNivelesCmtsPorPuerto\" alt=\"Historico de Niveles CMTS por puerto\">\n                                                                            ").concat(result[index].Interface, "\n                                                                    </a>");
          result[index].descripcionCol = "<button  data-uno=\"".concat(result[index].cmts).concat(result[index].Interface, "\"  class=\"verSnrCablemodem\" alt=\"Cablemodem SNR\">\n                                                                            ").concat(result[index].description, "\n                                                                    </button>");
        }

        return result;
      },
      'error': function error(jqXHR, textStatus, errorThrown) {
        console.log("Error: ", jqXHR, textStatus, errorThrown);
        $("#body-errors-modal").html(jqXHR.responseText);
        $('#errorsModal').modal('show');
        return false;
        var erroresPeticion = "";

        if (jqXHR.status) {
          var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].codigos(jqXHR.status);
          erroresPeticion = mensaje;
        }

        if (jqXHR.responseJSON) {
          if (jqXHR.responseJSON.mensaje) {
            var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto

            var _mensaje3 = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].mensajeErrorJson(erroresMensaje);

            erroresPeticion += "<br> " + _mensaje3;
          }
        }

        erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente." : erroresPeticion;
        $("#body-errors-modal").html("<div class=\"text-danger\">".concat(erroresPeticion, "</div>"));
        $('#errorsModal').modal('show');
        return false;
      }
    },
    "columns": [{
      data: 'cmts'
    }, {
      data: 'interfaceCol'
    }, {
      data: 'descripcionCol'
    }, {
      data: 'powerup_max'
    }, {
      data: 'powerup_prom'
    }, {
      data: 'powerup_min'
    }, {
      data: 'powerds_max'
    }, {
      data: 'powerds_prom'
    }, {
      data: 'powerds_min'
    }, {
      data: 'snr_avg'
    }, {
      data: 'fecha_hora'
    }],
    'columnDefs': [{
      'targets': '_all',
      'createdCell': function createdCell(td, cellData, rowData, row, col) {
        $(td).css({
          "background": "".concat(rowData.backgrounPrincipal),
          "color": "".concat(rowData.colorPrincipal)
        });
        $(td).addClass("text-center");

        if (col == 4) {
          //powerup_prom
          $(td).css({
            "background": "".concat(rowData.backgrounPowerUpProm),
            "color": "".concat(rowData.colorPowerUpProm)
          });
        }

        if (col == 5 || col == 6) {
          //powerup_min - powerds_max
          $(td).css({
            "background": "".concat(rowData.backgrounPrincipal),
            "color": "".concat(rowData.colorPrincipal)
          });
        }

        if (col == 7) {
          // powerds_prom
          $(td).css({
            "background": "".concat(rowData.backgrounPowerDowsProm),
            "color": "".concat(rowData.colorPowerDowsProm)
          });
        }

        if (col == 8) {
          // powerds_min
          $(td).css({
            "background": "".concat(rowData.backgrounPrincipal),
            "color": "".concat(rowData.colorPrincipal)
          });
        }

        if (col == 9) {
          // snr_avg
          $(td).css({
            "background": "".concat(rowData.backgrounSnrArvg),
            "color": "".concat(rowData.colorSnrArvg)
          });
        }
      }
    }, {
      "targets": '_all',
      // "orderable" : false,
      "searchable": false
    }],
    "initComplete": function initComplete() {
      console.log("Termino la carga completa");
    },
    "pageLength": 100,
    "language": {
      "info": "_TOTAL_ registros",
      "search": "Buscar",
      "paginate": {
        "next": "Siguiente",
        "previous": "Anterior"
      },
      "lengthMenu": 'Mostrar <select >' + '<option value="100">100</option>' + '<option value="300">300</option>' + '<option value="500">500</option>' + '<option value="700">700</option>' + '<option value="-1">Todos</option>' + '</select> registros',
      "loadingRecords": "<div id='carga_person'> <div class='loader'>Cargando...</div></div>",
      "processing": "<div id='carga_person'> <div class='loader'>Procesando...</div></div>",
      "emptyTable": "No hay datos disponibles",
      "zeroRecords": "No hay coincidencias",
      "infoEmpty": "",
      "infoFiltered": ""
    }
  });
  tabla.parent().addClass("table-responsive tableFixHead"); // $("#filtroContentHFC").removeClass("d-none")

  var tablaHead = $('.tableFixHead').find('thead th');
  $('.tableFixHead').on('scroll', function () {
    // console.log("ejecutando"+this.scrollTop); 
    tablaHead.css('transform', 'translateY(' + this.scrollTop + 'px)');
  });
};

peticiones.cargaHistoricoNivelesCmtsPorPuerto = function cargaHistoricoNivelesCmtsPorPuerto(tabla, ruta, puerto) {
  tabla.DataTable({
    "destroy": true,
    "processing": true,
    "serverSide": true,
    "dom": '<"row mx-0"' + '<"col-12 col-sm-6"l>>' + '<"row"' + '<"col-sm-12 px-0 table-responsive tableFixHead"t>>' + '<"row"' + '<"col-12 col-sm-5"i><"col-12 col-sm-7"p>>' + 'r',
    "ajax": {
      'url': ruta,
      "type": "GET",
      "dataType": "json",
      "data": function data(d) {
        d.puerto = puerto;
      },
      'dataSrc': function dataSrc(json) {
        //console.log("Termino la carga asi tenga error.. :",json)
        //return json
        var result = json.data;
        return result;
      },
      'error': function error(jqXHR, textStatus, errorThrown) {
        //console.log( "Error: " ,jqXHR, textStatus, errorThrown); 
        //$("#body-errors-modal").html(jqXHR.responseText)
        //$('#errorsModal').modal('show')
        //return false
        var erroresPeticion = "";

        if (jqXHR.status) {
          var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].codigos(jqXHR.status);
          erroresPeticion = mensaje;
        }

        if (jqXHR.responseJSON) {
          if (jqXHR.responseJSON.mensaje) {
            var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto

            var _mensaje4 = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].mensajeErrorJson(erroresMensaje);

            erroresPeticion += "<br> " + _mensaje4;
          }
        }

        erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente." : erroresPeticion;
        $("#body-errors-modal").html("<div class=\"text-danger\">".concat(erroresPeticion, "</div>"));
        $('#errorsModal').modal('show');
        return false;
      }
    },
    "columns": [{
      data: 'cmts'
    }, {
      data: 'Interface'
    }, {
      data: 'description'
    }, {
      data: 'powerup_max'
    }, {
      data: 'powerup_prom'
    }, {
      data: 'powerup_min'
    }, {
      data: 'powerds_max'
    }, {
      data: 'powerds_prom'
    }, {
      data: 'powerds_min'
    }, {
      data: 'snr_avg'
    }, {
      data: 'snr_down'
    }, {
      data: 'fecha_hora'
    }],
    'columnDefs': [{
      'targets': '_all',
      'createdCell': function createdCell(td, cellData, rowData, row, col) {
        $(td).css({
          "background": "".concat(rowData.backgrounPrincipal),
          "color": "".concat(rowData.colorPrincipal)
        });
        $(td).addClass("text-center");

        if (col == 4) {
          //powerup_prom
          $(td).css({
            "background": "".concat(rowData.backgrounPowerUpProm),
            "color": "".concat(rowData.colorPowerUpProm)
          });
        }

        if (col == 5 || col == 6) {
          //powerup_min - powerds_max
          $(td).css({
            "background": "".concat(rowData.backgrounPrincipal),
            "color": "".concat(rowData.colorPrincipal)
          });
        }

        if (col == 7) {
          // powerds_prom
          $(td).css({
            "background": "".concat(rowData.backgrounPowerDowsProm),
            "color": "".concat(rowData.colorPowerDowsProm)
          });
        }

        if (col == 8) {
          // powerds_min
          $(td).css({
            "background": "".concat(rowData.backgrounPrincipal),
            "color": "".concat(rowData.colorPrincipal)
          });
        }

        if (col == 9) {
          // snr_avg
          $(td).css({
            "background": "".concat(rowData.backgrounSnrArvg),
            "color": "".concat(rowData.colorSnrArvg)
          });
        }

        if (col == 10) {
          // snr_down
          $(td).css({
            "background": "".concat(rowData.backgrounSnrDown),
            "color": "".concat(rowData.colorSnrDown)
          });
        }
      }
    }, {
      "targets": '_all',
      // "orderable" : false,
      "searchable": false
    }],
    "initComplete": function initComplete() {
      console.log("Termino la carga completa");
    },
    "pageLength": 100,
    "language": {
      "info": "_TOTAL_ registros",
      "search": "Buscar",
      "paginate": {
        "next": "Siguiente",
        "previous": "Anterior"
      },
      "lengthMenu": 'Mostrar <select >' + '<option value="100">100</option>' + '<option value="300">300</option>' + '<option value="500">500</option>' + '<option value="700">700</option>' + '<option value="-1">Todos</option>' + '</select> registros',
      "loadingRecords": "<div id='carga_person'> <div class='loader'>Cargando...</div></div>",
      "processing": "<div id='carga_person'> <div class='loader'>Procesando...</div></div>",
      "emptyTable": "No hay datos disponibles",
      "zeroRecords": "No hay coincidencias",
      "infoEmpty": "",
      "infoFiltered": ""
    }
  });
  tabla.parent().addClass("table-responsive tableFixHead"); // $("#filtroContentHFC").removeClass("d-none")

  var tablaHead = $('.tableFixHead').find('thead th');
  $('.tableFixHead').on('scroll', function () {
    // console.log("ejecutando"+this.scrollTop); 
    tablaHead.css('transform', 'translateY(' + this.scrollTop + 'px)');
  });
};

/* harmony default export */ __webpack_exports__["default"] = (peticiones);

/***/ }),

/***/ "./resources/js/globalResources/errors.js":
/*!************************************************!*\
  !*** ./resources/js/globalResources/errors.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var errors = {};

errors.codigos = function codigos(codigo) {
  var texto = "";

  if (codigo == 401) {
    location.reload();
    texto = "Sesi\xF3n terminada.";
  }

  switch (codigo) {
    case 204:
      texto = "La petici\xF3n se ha completado con \xE9xito pero su respuesta no tiene ning\xFAn contenido.";
      break;

    case 401:
      texto = "Su sesi\xF3n expiro.";
      break;

    case 403:
      texto = "Petici\xF3n no autoriazada.";
      break;

    case 404:
      texto = "Petici\xF3n no encontrada.";
      break;

    case 405:
      texto = "Error en el servicio. Intente nuevamente.";
      break;

    case 409:
      texto = "Conflicto de petici\xF3n en el servidor. Intente nuevamente. Si persiste el error, actualizar la Web.";
      break;

    case 422:
      texto = "No se puede procesar la petici\xF3n. Verifique los datos enviados.";
      break;

    case 500:
      texto = "Falla inesperada. Intente nuevamente.";
      break;

    default:
      texto = "Falla inesperada con la petici\xF3n. Intente nuevamente.";
      break;
  }

  return texto;
};

errors.mensajeErrorJson = function mensajeErrorJson(erroresJson) {
  //console.log("el tipo de mensaje es:",typeof(erroresJson),erroresJson)
  if (typeof erroresJson == "string") {
    return erroresJson;
  } //recorreo objeto como array


  var msj = "";
  Object.keys(erroresJson).forEach(function (key) {
    //console.log("El key es: -",key,"-")
    if (!isNaN(key)) {
      msj += "<li>".concat(erroresJson[key], "</li>");
    } else {
      msj += "".concat(key, " : ").concat(erroresJson[key], " <br/>");
    }
  });
  return msj;
};

/* harmony default export */ __webpack_exports__["default"] = (errors);

/***/ }),

/***/ "./resources/js/globalResources/modulos/diagnostico-masivo.js":
/*!********************************************************************!*\
  !*** ./resources/js/globalResources/modulos/diagnostico-masivo.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var diagnosticoMasivo = {};

diagnosticoMasivo.lista = function lista(tabla, url, parametros) {
  tabla.DataTable({
    "destroy": true,
    "processing": true,
    "serverSide": true,
    "dom": '<"row mx-0"' + '<"col-12 col-sm-4"l><"col-12 col-sm-4"B><"col-12 col-sm-4"f>>' + '<"row"' + '<"col-sm-12 px-0 table-responsive table-text-xs tableFixHead"t>>' + '<"row"' + '<"col-12 col-sm-5"i><"col-12 col-sm-7"p>>' + 'r',
    //"dom":"Bfrtip",
    "buttons": [{
      tag: 'button',
      className: 'btn btn-sm btn-primary shadow-sm',
      extend: 'csvHtml5',
      text: '<i class="fa fa-file-text-o"></i>',
      titleAttr: 'CSV'
    }],
    "ajax": {
      'url': url,
      "type": "GET",
      "data": function data(d) {
        d.n = parametros.n;
        d.t = parametros.t;
      },
      'dataSrc': function dataSrc(json) {
        //console.log("Termino la carga sinerror.. :",json)
        //return json
        var result = json.data;
        /* let inicioCount = parseInt(json.input.start)
         //let endCount = parseInt(parseInt(json.input.start)+parseInt(json.input.length))
           for (let index = 0; index < result.length ; index++) {
             inicioCount ++
             result[index].item = inicioCount 
         }*/
        // console.log("La data procesada final... es: ",result)

        return result;
      },
      'error': function error(jqXHR, textStatus) {
        // console.log( "Error: " ,jqXHR, textStatus); 
        //$("#resultDiagnosticoMasivo").html(jqXHR.responseText);
        $("#body-errors-modal").html(jqXHR.responseText);
        $('#errorsModal').modal('show');

        if (jqXHR.status) {
          if (jqXHR.status == 401) {
            location.reload();
            return false;
          } // peticiones.redirectTabs($('#multiMapTab')) 


          return false;
        } // peticiones.redirectTabs($('#multiMapTab')) 


        return false;
      }
    },
    "columns": [{
      data: 'items'
    }, {
      data: 'cmts'
    }, {
      data: 'interface'
    }, {
      data: 'macstate'
    }, {
      data: 'USPwr'
    }, {
      data: 'USMER_SNR'
    }, {
      data: 'DSPwr'
    }, {
      data: 'DSMER_SNR'
    }, {
      data: 'averia'
    }, {
      data: 'codctr'
    }, {
      data: 'codedo'
    }, {
      data: 'IDCLIENTECRM'
    }, {
      data: 'nameclient'
    }, {
      data: 'direccion'
    }, {
      data: 'nodohfc'
    }, {
      data: 'trobahfc'
    }, {
      data: 'nodocms'
    }, {
      data: 'trobacms'
    }, {
      data: 'amplificador'
    }, {
      data: 'tap'
    }, {
      data: 'telf1'
    }, {
      data: 'telf2'
    }, {
      data: 'movil1'
    }, {
      data: 'mac2'
    }, {
      data: 'SERVICEPACKAGE'
    }, {
      data: 'FECHAACTIVACION'
    }, {
      data: 'estado_modem'
    }, {
      data: 'SCOPESGROUP'
    }, {
      data: 'estado'
    }, {
      data: 'numcoo_x'
    }, {
      data: 'numcoo_y'
    }],
    'columnDefs': [{
      'targets': '_all',
      'createdCell': function createdCell(td, cellData, rowData, row, col) {
        // $(td).attr('id', 'cell-' + cellData); 
        $(td).css({
          "background": "".concat(rowData.estadoBackground),
          "color": "".concat(rowData.estadoColor)
        });
        /*if(col == 1){//RxPwrdBmv 
            $(td).css({"color":`${rowData.coloresNivelesRX.estiloColorRxPwrdBmv}`,"background":`${rowData.coloresNivelesRX.estiloBackRxPwrdBmv}`});
        }*/

        if (col == 4) {
          //USPwr
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.DownPxBackground),
            "color": "".concat(rowData.coloresNivelesRuido.DownPxColor)
          });
        }

        if (col == 5) {
          //USMER_SNR
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.UpSnrBackground),
            "color": "".concat(rowData.coloresNivelesRuido.UpSnrColor)
          });
        }

        if (col == 6) {
          //DSPwr
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.DownPxBackground),
            "color": "".concat(rowData.coloresNivelesRuido.DownPxColor)
          });
        }

        if (col == 7) {
          //DSMER_SNR
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.DownSnrBackground),
            "color": "".concat(rowData.coloresNivelesRuido.DownSnrColor)
          });
        }

        if (col == 8 || col == 9 || col == 10) {
          //AVERIAS
          if (rowData.averia != "" && rowData.averia != null) {
            // console.log("los valores averia son:",rowData.averia)
            $(td).css({
              "background": "".concat(rowData.averiasBackground),
              "color": "".concat(rowData.averiasColor)
            });
          }
        } // console.log("los cells: ",td, cellData, rowData, row, col)

      }
    }, {
      "targets": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
      //"orderable" : false,
      "searchable": false
    }],
    "pageLength": 25,
    "language": {
      "info": "_TOTAL_ registros",
      "search": "Buscar",
      "paginate": {
        "next": "Siguiente",
        "previous": "Anterior"
      },
      "lengthMenu": 'Mostrar <select >' + '<option value="25">25</option>' + '<option value="50">50</option>' + '<option value="100">100</option>' + '<option value="-1">Todos</option>' + '</select> registros',
      "loadingRecords": "<div id='carga_person'> <div class='loader'>Cargando...</div></div>",
      "processing": "<div id='carga_person'> <div class='loader'>Procesando...</div></div>",
      "emptyTable": "No hay datos disponibles",
      "zeroRecords": "No hay coincidencias",
      "infoEmpty": "",
      "infoFiltered": ""
      /*,
      "initComplete": function () {
         console.log("ya termino lac arga....",this)
         
      }*/

    }
  }); // $("#resultDiagnosticoMasivo").parent().addClass("table-responsive tableFixHead") 

  tabla.css({
    "font-size": "11px"
  });
  var tablaHead = $('.tableFixHead').find('thead th');
  $('.tableFixHead').on('scroll', function () {
    // console.log("ejecutando"+this.scrollTop); 
    tablaHead.css('transform', 'translateY(' + this.scrollTop + 'px)');
  });
};

/* harmony default export */ __webpack_exports__["default"] = (diagnosticoMasivo);

/***/ }),

/***/ "./resources/js/globalResources/modulos/historico-nodo-trobas.js":
/*!***********************************************************************!*\
  !*** ./resources/js/globalResources/modulos/historico-nodo-trobas.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var historicoNodoTroba = {};

historicoNodoTroba.verHistorialNodoTroba = function verHistorialNodoTroba(tabla, url, parametros, activoFiltroEspecial) {
  if (activoFiltroEspecial) {
    $("#display_filter_special").prop("disabled", true);
  }

  tabla.DataTable({
    "destroy": true,
    "processing": true,
    "serverSide": true,
    "dom": '<"row mx-0"' + '<"col-12 col-sm-12"l>>' + '<"row"' + '<"col-sm-12 px-0 table-responsive tableFixHead"t>>' + '<"row"' + '<"col-12 col-sm-5"i><"col-12 col-sm-7"p>>' + 'r',
    "ajax": {
      'url': url,
      "type": "GET",
      "dataType": "json",
      "data": function data(d) {
        d.nodo = parametros.nodo;
        d.troba = parametros.troba;
      },
      'error': function error(jqXHR, textStatus, errorThrown) {
        // console.log( "Error: " ,jqXHR, textStatus, errorThrown); 
        if (activoFiltroEspecial) {
          $("#display_filter_special").prop("disabled", false);
        } //alert("Se generó un error con la petición, Se intentará traer nuevamente.")


        var erroresPeticion = "";

        if (jqXHR.status) {
          var mensaje = errors.codigos(jqXHR.status);
          erroresPeticion = mensaje;
        }

        if (jqXHR.responseJSON) {
          if (jqXHR.responseJSON.mensaje) {
            var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto

            var _mensaje = errors.mensajeErrorJson(erroresMensaje);

            erroresPeticion += "<br> " + _mensaje;
          }
        }

        erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente." : erroresPeticion;
        $("#body-errors-modal").html("<div class=\"text-danger\">".concat(erroresPeticion, "</div>"));
        $('#errorsModal').modal('show');
        return false;
      }
    },
    "columns": [{
      data: 'nodo'
    }, {
      data: 'troba'
    }, {
      data: 'powerup_max'
    }, {
      data: 'powerup_prom'
    }, {
      data: 'powerup_min'
    }, {
      data: 'powerds_max'
    }, {
      data: 'powerds_prom'
    }, {
      data: 'powerds_min'
    }, {
      data: 'snr_avg'
    }, {
      data: 'snr_down'
    }, {
      data: 'fecha_hora'
    }, {
      data: 'cmts'
    }, {
      data: 'interface'
    }],
    'columnDefs': [{
      "targets": "_all",
      "orderable": false,
      "searchable": false
    }],
    "initComplete": function initComplete() {
      // console.log("Termino la carga completa")  
      if (activoFiltroEspecial) {
        $("#display_filter_special").prop("disabled", false);
      }
    },
    "pageLength": 100,
    "language": {
      "info": "_TOTAL_ registros",
      "search": "Buscar",
      "paginate": {
        "next": "Siguiente",
        "previous": "Anterior"
      },
      "lengthMenu": 'Mostrar <select >' + '<option value="100">100</option>' + '<option value="200">200</option>' + '<option value="500">500</option>' + '<option value="700">700</option>' + '<option value="-1">Todos</option>' + '</select> registros',
      "loadingRecords": "<div id='carga_person'> <div class='loader'>Cargando...</div></div>",
      "processing": "<div id='carga_person'> <div class='loader'>Procesando...</div></div>",
      "emptyTable": "No hay datos disponibles",
      "zeroRecords": "No hay coincidencias",
      "infoEmpty": "",
      "infoFiltered": ""
    }
  });
  tabla.parent().addClass("table-responsive tableFixHead"); // $("#filtroContentHFC").removeClass("d-none")

  var tablaHead = $('.tableFixHead').find('thead th');
  $('.tableFixHead').on('scroll', function () {
    // console.log("ejecutando"+this.scrollTop); 
    tablaHead.css('transform', 'translateY(' + this.scrollTop + 'px)');
  });
};

/* harmony default export */ __webpack_exports__["default"] = (historicoNodoTroba);

/***/ }),

/***/ "./resources/js/globalResources/modulos/mapa.js":
/*!******************************************************!*\
  !*** ./resources/js/globalResources/modulos/mapa.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/globalResources/errors.js */ "./resources/js/globalResources/errors.js");

var mapa = {};

mapa.vistaGeneral = function vistaGeneral(contenedor, ruta, parametros) {
  contenedor.html("<div id=\"carga_person\">\n                        <div class=\"loader\">Loading...</div>\n                    </div>");
  $.ajax({
    url: ruta,
    method: "get",
    data: parametros,
    dataType: "json"
  }).done(function (data) {
    //console.log("El resultado es:",data)  
    var mapa = JSON.parse(data.response.html);
    contenedor.html(mapa);
  }).fail(function (jqXHR, textStatus) {
    //console.log( "Error: " + jqXHR, textStatus); 
    // contenedor.html(jqXHR.responseText)
    // return false
    var erroresPeticion = "";

    if (jqXHR.responseJSON) {
      if (jqXHR.responseJSON.mensaje) {
        var erroresMensaje = jqXHR.responseJSON.mensaje; //captura objeto

        var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].mensajeErrorJson(erroresMensaje);
        erroresPeticion += mensaje;
      }
    }

    if (jqXHR.status) {
      var _mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_0__["default"].codigos(jqXHR.status);

      erroresPeticion += "<br> " + _mensaje;
    }

    erroresPeticion = erroresPeticion.trim() == 0 ? "hubo un error en el servicio, intente nuevamente." : erroresPeticion;
    contenedor.html(erroresPeticion);
    return false;
  });
};

mapa.detallesEdificios = function detallesEdificios(tabla, ruta, parametros) {
  tabla.DataTable({
    "destroy": true,
    "processing": true,
    "serverSide": true,
    "dom": '<"row mx-0"' + '<"col-12 col-sm-6"l><"col-12 col-sm-6"f>>' + '<"row position-relative"' + '<"col-sm-12 px-0 table-responsive table-text-xs tableFixHead"t>' + 'r>' + '<"row"' + '<"col-12 col-sm-5"i><"col-12 col-sm-7"p>>',
    "ajax": {
      'url': ruta,
      "type": "GET",
      "data": function data(d) {
        d.nom_via = parametros.des_via;
        d.desdtt = parametros.des_dtt;
        d.num_puer = parametros.des_puer;
      },
      'error': function error(jqXHR, textStatus) {
        console.log("Error: ", jqXHR, textStatus);
        $("#body-errors-modal").html(jqXHR.responseText);
        $('#errorsModal').modal('show');

        if (jqXHR.status) {
          if (jqXHR.status == 401) {
            location.reload();
            return false;
          } // peticiones.redirectTabs($('#multiMapTab')) 


          return false;
        } // peticiones.redirectTabs($('#multiMapTab')) 


        return false;
      }
    },
    "columns": [{
      data: 'macstate'
    }, //{data: 'RxPwrdBmv'},
    {
      data: 'USPwr'
    }, {
      data: 'USMER_SNR'
    }, {
      data: 'DSPwr'
    }, {
      data: 'DSMER_SNR'
    }, {
      data: 'IDCLIENTECRM'
    }, {
      data: 'nameclient'
    }, {
      data: 'direccion'
    }, {
      data: 'amplificador'
    }, {
      data: 'tap'
    }, {
      data: 'telf1'
    }, {
      data: 'MACADDRESS'
    }, {
      data: 'SERVICEPACKAGE'
    }],
    'columnDefs': [{
      'targets': '_all',
      'createdCell': function createdCell(td, cellData, rowData, row, col) {
        // $(td).attr('id', 'cell-' + cellData); 
        $(td).css({
          "background": "".concat(rowData.estilosText.background),
          "color": "".concat(rowData.estilosText.color)
        });
        /*if(col == 1){//RxPwrdBmv 
            $(td).css({"color":`${rowData.coloresNivelesRX.estiloColorRxPwrdBmv}`,"background":`${rowData.coloresNivelesRX.estiloBackRxPwrdBmv}`});
        }*/

        if (col == 1) {
          //USPwr
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.UpPxBackground),
            "color": "".concat(rowData.coloresNivelesRuido.UpPxColor)
          });
        }

        if (col == 2) {
          //USMER_SNR
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.UpSnrBackground),
            "color": "".concat(rowData.coloresNivelesRuido.UpSnrColor)
          });
        }

        if (col == 3) {
          //DSPwr
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.DownPxBackground),
            "color": "".concat(rowData.coloresNivelesRuido.DownPxColor)
          });
        }

        if (col == 4) {
          //DSMER_SNR
          $(td).css({
            "background": "".concat(rowData.coloresNivelesRuido.DownSnrBackground),
            "color": "".concat(rowData.coloresNivelesRuido.DownSnrColor)
          });
        } // console.log("los cells: ",td, cellData, rowData, row, col)

      }
    }],
    "pageLength": 25,
    "language": {
      "info": "_TOTAL_ registros",
      "search": "Buscar",
      "paginate": {
        "next": "Siguiente",
        "previous": "Anterior"
      },
      "lengthMenu": 'Mostrar <select >' + '<option value="25">25</option>' + '<option value="50">50</option>' + '<option value="100">100</option>' + '<option value="-1">Todos</option>' + '</select> registros',
      "loadingRecords": "<div id='carga_person'> <div class='loader'>Cargando...</div></div>",
      "processing": "<div id='carga_person'> <div class='loader'>Procesando...</div></div>",
      "emptyTable": "No hay datos disponibles",
      "zeroRecords": "No hay coincidencias",
      "infoEmpty": "",
      "infoFiltered": ""
    }
  });
  tabla.parent().addClass("table-responsive tableFixHead");
  var tablaHead = $('.tableFixHead').find('thead th');
  $('.tableFixHead').on('scroll', function () {
    // console.log("ejecutando"+this.scrollTop); 
    tablaHead.css('transform', 'translateY(' + this.scrollTop + 'px)');
  });
};

/* harmony default export */ __webpack_exports__["default"] = (mapa);

/***/ }),

/***/ 78:
/*!***********************************************************************************!*\
  !*** multi ./resources/js/administrador/modulos/descarga-clientes-troba/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\laragon\www\new_system\resources\js\administrador\modulos\descarga-clientes-troba\index.js */"./resources/js/administrador/modulos/descarga-clientes-troba/index.js");


/***/ })

/******/ });