/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 41);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/administrador/modulos/arbol-decisiones/estructura.js":
/*!***************************************************************************!*\
  !*** ./resources/js/administrador/modulos/arbol-decisiones/estructura.js ***!
  \***************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _peticiones_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./peticiones.js */ "./resources/js/administrador/modulos/arbol-decisiones/peticiones.js");
/* harmony import */ var _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/globalResources/errors.js */ "./resources/js/globalResources/errors.js");


var estructuraArbolCompleta = "";
var identificadorEstructuraSelect = "";
var detalleEstructuraSelect = "";
$(function () {
  $.ajaxSetup({
    headers: {
      'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
    }
  });
  $("body").on("click", ".estructuraDecisionArbol", function () {
    _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].redirectTabs($('#estructuraDecisionesTab'));
    $("#resultadoEstructuraCompleta").html("<div id=\"carga_person\">\n                                                <div class=\"loader\">Loading...</div>\n                                            </div>");
    var identificador = $(this).data("uno");
    var detalle = $(this).data("dos");
    var tabla = $(this).data("tres");
    identificadorEstructuraSelect = identificador;
    detalleEstructuraSelect = detalle;
    getEstructuraDecision(tabla, identificador, detalle);
  });
  $("body").on("click", ".secundarios", function () {
    ////  console.log("clic a: ",$(this))
    $(this).siblings("*").css({
      "display": "block"
    }); //// console.log(padreLi)
  });
  $("body").on("dblclick", ".secundarios", function () {
    //// console.log("clic a: ",$(this))
    $(this).siblings("*").css({
      "display": "none"
    }); //// console.log(padreLi)
  });
});

function getEstructuraDecision(tabla, identificador, detalle) {
  _peticiones_js__WEBPACK_IMPORTED_MODULE_0__["default"].procesandoEstructurasArbol(tabla, identificador, detalle, function (res) {
    //Errores
    if (res.error == "failed") {
      //console.log("Error: ",res.errorThrown,res.jqXHR,res.textStatus) 
      //$("#resultadoEstructuraCompleta").html(`<div class="col-12 text-danger text-center">${res.jqXHR.responseText}</div>`); 
      //return false
      if (res.jqXHR.status) {
        var mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_1__["default"].codigos(res.jqXHR.status);
        $("#resultadoEstructuraCompleta").html("");
        $("#body-errors-modal").html("<div class=\"col-12 text-danger text-center\">".concat(mensaje, "</div>"));
        $('#errorsModal').modal('show');
        return false;
      }

      if (res.jqXHR.responseJSON) {
        if (res.jqXHR.responseJSON.mensaje) {
          var erroresMensaje = res.jqXHR.responseJSON.mensaje; //captura objeto

          var _mensaje = _globalResources_errors_js__WEBPACK_IMPORTED_MODULE_1__["default"].mensajeErrorJson(erroresMensaje);

          $("#resultadoEstructuraCompleta").html("<div class=\"col-12 h6 text-danger text-center\">".concat(_mensaje, "</div>"));
          return false;
        }
      }

      return false;
    } //console.log("paso errores... la data es: ",res)
    //Inicia


    var arrayArbolDecisiones = res.response.arbol[0].datos.decisiones;
    var tablaArbol = res.response.arbol[0].tabla;
    estructuraArbolCompleta = "<ul class=\"padres\"  id=\"padreContenedor\">";
    arrayArbolDecisiones.forEach(function (e) {
      //Agregando select para mostrar su estructura
      var AddCssIdentifidacor = "";

      if (e.id == identificadorEstructuraSelect && e.detalle == detalleEstructuraSelect) {
        AddCssIdentifidacor = "id=\"seleccionado\"";
      }

      estructuraArbolCompleta += "<li id=\"principal\">\n                                            <a href=\"javascript:void(0)\" class=\"secundarios\" ".concat(AddCssIdentifidacor, " \n                                                data-id=\"").concat(e.id, "\" data-detalle=\"").concat(e.detalle, "\" data-1=\"").concat(tablaArbol, "\"\n                                                 id=\"estructura").concat(e.id).concat(tablaArbol, "\" \n                                                 data-masiva=\"").concat(e.img_masivo == null ? 'sinimagen.png' : e.img_masivo, "\"\n                                                 data-negocio=\"").concat(e.img_negocios == null ? 'sinimagen.png' : e.img_negocios, "\" \n                                                 data-total=\"").concat(e.img_total == null ? 'sinimagen.png' : e.img_total, "\">\n                                                 <i class=\"icofont-tick-mark icofont-sm text-danger\"></i> \n                                                 <span class=\"text_decision_completo\">").concat(e.detalle, " </span>\n                                                 \n                                                \n                                            ");

      if (PERMISO_CREATE) {
        estructuraArbolCompleta += " <i class=\"icofont-ui-add icofont-1x text-primary pl-1 pr-1 addChildTree\"></i> ";
      }

      if (PERMISO_EDIT) {
        estructuraArbolCompleta += " <i class=\"icofont-edit-alt text-success pl-1 pr-1 icofont-1x editChildTree\"></i> ";
      }

      if (PERMISO_DELETE) {
        estructuraArbolCompleta += " <i class=\"icofont-ui-delete text-danger pl-1 pr-1 icofont-1x removeChildTree\"></i> ";
      }

      estructuraArbolCompleta += "  <i class=\"icofont-dotted-down icofont-1x text-success ml-3 pr-1\"></i> </a>"; //Inicio de Decisiones GROUP

      if (e.decisionesGroup) {
        cargaDecisionesGroup(e);
      }

      estructuraArbolCompleta += "</li>"; //End Decisiones Group
    });
    estructuraArbolCompleta += "</ul>";
    $("#resultadoEstructuraCompleta").html(estructuraArbolCompleta);
    $("#seleccionado").parents(".padres").css({
      "display": "block"
    });
  });
}

function cargaDecisionesGroup(e) {
  ////console.log("Datos carga: ",e.decisionesGroup.Alternativas.decisiones)
  ////console.log("Datos carga:",e)
  var scopeGroup = e.decisionesGroup.Alternativas.decisiones;

  if (scopeGroup.length > 0) {
    //// console.log("el padre,",scopeGroup,", tiene ",scopeGroup.length," hijos")
    ////  console.log("ingreso al length scopegroup...")
    var tablaArbolNew = e.decisionesGroup.tabla;
    estructuraArbolCompleta += "<ul class=\"padres\">";
    scopeGroup.forEach(function (element) {
      var AddNewCssIdentifidacor = "";

      if (element.id == identificadorEstructuraSelect && element.detalle == detalleEstructuraSelect) {
        AddNewCssIdentifidacor = "id=\"seleccionado\"";
      } //// console.log("estas en el interior  con el elemento; ",element)


      estructuraArbolCompleta += "<li class=\"items_child\">\n                                            <a  href=\"javascript:void(0)\" class=\"secundarios\" ".concat(AddNewCssIdentifidacor, " \n                                                data-id=\"").concat(element.id, "\" data-detalle=\"").concat(element.detalle, "\" data-1=\"").concat(tablaArbolNew, "\"\n                                                id=\"estructura").concat(element.id).concat(tablaArbolNew, "\" \n                                                data-masiva=\"").concat(element.img_masivo == null ? 'sinimagen.png' : element.img_masivo, "\"\n                                                data-negocio=\"").concat(element.img_negocios == null ? 'sinimagen.png' : element.img_negocios, "\" \n                                                data-total=\"").concat(element.img_total == null ? 'sinimagen.png' : element.img_total, "\">\n                                                 <i class=\"icofont-tick-mark icofont-sm text-danger\"></i> \n                                                 <span class=\"text_decision_completo\">").concat(element.detalle, "</span>\n                                        ");

      if (PERMISO_CREATE) {
        estructuraArbolCompleta += " <i class=\"icofont-ui-add icofont-1x text-primary pl-1 pr-1 addChildTree\"></i> ";
      }

      if (PERMISO_EDIT) {
        estructuraArbolCompleta += " <i class=\"icofont-edit-alt text-success pl-1 pr-1 icofont-1x editChildTree\"></i> ";
      }

      if (PERMISO_DELETE) {
        estructuraArbolCompleta += " <i class=\"icofont-ui-delete text-danger pl-1 pr-1 icofont-1x removeChildTree\"></i> ";
      }

      if (element.decisionesGroup) {
        if (element.decisionesGroup.Alternativas.decisiones.length > 0) {
          estructuraArbolCompleta += " <i class=\"icofont-dotted-down icofont-1x  ml-3 pr-1 text-success\"></i>";
        }
      }

      estructuraArbolCompleta += "  </a>";

      if (element.decisionesGroup) {
        cargaDecisionesGroup(element);
      }

      estructuraArbolCompleta += "</li>";
    });
    estructuraArbolCompleta += "</ul>";
  }
}

/***/ }),

/***/ "./resources/js/administrador/modulos/arbol-decisiones/peticiones.js":
/*!***************************************************************************!*\
  !*** ./resources/js/administrador/modulos/arbol-decisiones/peticiones.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var peticiones = {};

peticiones.redirectTabs = function redirectTabs(identificador) {
  $('#tabsArbolDecisiones > .tab-pane').removeClass('show');
  $('#tabsArbolDecisiones > .tab-pane').removeClass('active');
  identificador.tab('show');
};

peticiones.cargaDetallesRamas = function cargaDetallesRamas() {
  $('#dataDecisionArbol').DataTable({
    "destroy": true,
    "processing": true,
    "dom": '<"row mx-0"' + '<"col-12 col-sm-6"l><"col-12 col-sm-6"f>>' + '<"row position-relative"' + '<"col-sm-12 px-0 table-responsive table-text-xs tableFixHead"t>' + 'r>' + '<"row"' + '<"col-12 col-sm-5"i><"col-12 col-sm-7"p>>',
    "language": {
      "info": "_TOTAL_ registros",
      "search": "Buscar",
      "paginate": {
        "next": "Siguiente",
        "previous": "Anterior"
      },
      "lengthMenu": 'Mostrar <select >' + '<option value="15">15</option>' + '<option value="50">50</option>' + '<option value="100">100</option>' + '<option value="-1">Todos</option>' + '</select> registros',
      "loadingRecords": "<div id='carga_person'> <div class='loader'>Cargando...</div></div>",
      "processing": "<div id='carga_person'> <div class='loader'>Procesando...</div></div>",
      "emptyTable": "No hay datos disponibles",
      "zeroRecords": "No hay coincidencias",
      "infoEmpty": "",
      "infoFiltered": ""
    }
  });
  var tablaHead = $('.tableFixHead').find('thead th');
  $('.tableFixHead').on('scroll', function () {
    // console.log("ejecutando"+this.scrollTop); 
    tablaHead.css('transform', 'translateY(' + this.scrollTop + 'px)');
  });
};

peticiones.listaPasoRamasJson = function listaPasoRamasJson(paso, callBack) {
  $.ajax({
    url: "/administrador/arbol-decision/paso-anterior/".concat(paso, "/show"),
    method: "GET",
    async: true,
    cache: false,
    dataType: "json"
  }).done(function (data) {
    //console.log("callbak antes del envio:",data)
    return callBack(data);
  }).fail(function (jqXHR, textStatus, errorThrown) {
    // console.log( "Request failed: " ,textStatus ,jqXHR,errorThrown);
    return callBack({
      "error": "failed",
      "jqXHR": jqXHR,
      "textStatus": textStatus,
      "errorThrown": errorThrown
    });
  });
};

peticiones.rearmandoDataRamasTabla = function rearmandoDataRamasTabla(data, tb) {
  var tablaNewData = "";
  data.forEach(function (el) {
    tablaNewData += "<tr>\n                           <td>".concat(el.id, "</td>\n                           <td>").concat(el.detalle, "</td>\n                           <td>\n                                <img src=\"/images/upload/arbol-decisiones/").concat(el.img_total ? el.img_total : 'sinimagen.png', "\" alt=\"\" class=\"img-thumbnail-arbolPasos\">\n                           </td>\n                           <td>\n                                <img src=\"/images/upload/arbol-decisiones/").concat(el.img_negocios ? el.img_negocios : 'sinimagen.png', "\" alt=\"\" class=\"img-thumbnail-arbolPasos\">\n                           </td>\n                           <td>\n                                <img src=\"/images/upload/arbol-decisiones/").concat(el.img_masivo ? el.img_masivo : 'sinimagen.png', "\" alt=\"\" class=\"img-thumbnail-arbolPasos\">\n                           </td> \n                           <td>\n                               <div class=\"d-flex justify-content-center\">");

    if (PERMISO_EDIT) {
      tablaNewData += "<a href=\"javascript:void(0)\" class=\"btn btn-sm btn-outline-primary shadow-sm mx-1 editDecisionArbol\" \n                                                   data-uno=\"".concat(el.id, "\" data-dos=\"").concat(el.detalle, "\" data-tres=\"").concat(el.img_total, "\"\n                                                   data-cuatro=\"").concat(el.img_negocios, "\" data-cinco=\"").concat(el.img_masivo, "\" data-seis=\"").concat(tb, "\">\n                                           <i class=\"icofont-edit-alt icofont-md\"></i>\n                                       </a>");
    }

    if (PERMISO_ESTRUCTURA) {
      tablaNewData += "<a href=\"javascript:void(0)\" class=\"btn btn-sm btn-outline-success shadow-sm mx-1 estructuraDecisionArbol\" \n                                                   data-uno=\"".concat(el.id, "\" data-dos=\"").concat(el.detalle, "\"\n                                                   data-tres=\"").concat(tb, "\">\n                                           <i class=\"icofont-tree icofont-md\"></i>\n                                       </a>");
    }

    tablaNewData += "</div>\n                           </td> \n                       </tr>";
  });
  $("#cargaListDetalleRamas").html(tablaNewData);
};

peticiones.procesandoEstructurasArbol = function procesandoEstructurasArbol(tabla, identificador, detalle, callBack) {
  $.ajax({
    url: "/administrador/arbol-decision/ramas/estructura",
    method: "GET",
    async: true,
    data: {
      tabla: tabla,
      identificador: identificador,
      detalle: detalle
    },
    cache: false,
    dataType: "json"
  }).done(function (data) {
    //console.log("callbak antes del envio:",data)
    return callBack(data);
  }).fail(function (jqXHR, textStatus, errorThrown) {
    // console.log( "Request failed: " ,textStatus ,jqXHR,errorThrown);
    return callBack({
      "error": "failed",
      "jqXHR": jqXHR,
      "textStatus": textStatus,
      "errorThrown": errorThrown
    });
  });
};

peticiones.storeRamaChild = function storeRamaChild(formData, callBack) {
  $.ajax({
    url: "/administrador/arbol-decision/rama/store",
    method: "POST",
    async: true,
    data: formData,
    cache: false,
    contentType: false,
    processData: false
  }).done(function (data) {
    //console.log("callbak antes del envio:",data)
    return callBack(data);
  }).fail(function (jqXHR, textStatus, errorThrown) {
    // console.log( "Request failed: " ,textStatus ,jqXHR,errorThrown);
    return callBack({
      "error": "failed",
      "jqXHR": jqXHR,
      "textStatus": textStatus,
      "errorThrown": errorThrown
    });
  });
};

peticiones.updateRamaEstructura = function updateRamaEstructura(formData, callBack) {
  $.ajax({
    url: "/administrador/arbol-decision/rama/edit",
    method: "POST",
    async: true,
    data: formData,
    cache: false,
    contentType: false,
    processData: false
  }).done(function (data) {
    //console.log("callbak antes del envio:",data)
    return callBack(data);
  }).fail(function (jqXHR, textStatus, errorThrown) {
    // console.log( "Request failed: " ,textStatus ,jqXHR,errorThrown);
    return callBack({
      "error": "failed",
      "jqXHR": jqXHR,
      "textStatus": textStatus,
      "errorThrown": errorThrown
    });
  });
};

peticiones.deleteRamaEstructura = function deleteRamaEstructura(eliminar, tbNamePage, callBack) {
  $.ajax({
    url: "/administrador/arbol-decision/rama/delete",
    method: "POST",
    data: {
      "arrayDelete": eliminar,
      tbNamePage: tbNamePage
    },
    dataType: "json",
    async: true,
    cache: false
  }).done(function (data) {
    //console.log("callbak antes del envio:",data)
    return callBack(data);
  }).fail(function (jqXHR, textStatus, errorThrown) {
    // console.log( "Request failed: " ,textStatus ,jqXHR,errorThrown);
    return callBack({
      "error": "failed",
      "jqXHR": jqXHR,
      "textStatus": textStatus,
      "errorThrown": errorThrown
    });
  });
};

/* harmony default export */ __webpack_exports__["default"] = (peticiones);

/***/ }),

/***/ "./resources/js/globalResources/errors.js":
/*!************************************************!*\
  !*** ./resources/js/globalResources/errors.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var errors = {};

errors.codigos = function codigos(codigo) {
  var texto = "";

  if (codigo == 401) {
    location.reload();
    texto = "Sesi\xF3n terminada.";
  }

  switch (codigo) {
    case 204:
      texto = "La petici\xF3n se ha completado con \xE9xito pero su respuesta no tiene ning\xFAn contenido.";
      break;

    case 401:
      texto = "Su sesi\xF3n expiro.";
      break;

    case 403:
      texto = "Petici\xF3n no autoriazada.";
      break;

    case 404:
      texto = "Petici\xF3n no encontrada.";
      break;

    case 405:
      texto = "Error en el servicio. Intente nuevamente.";
      break;

    case 409:
      texto = "Conflicto de petici\xF3n en el servidor. Intente nuevamente. Si persiste el error, actualizar la Web.";
      break;

    case 422:
      texto = "No se puede procesar la petici\xF3n. Verifique los datos enviados.";
      break;

    case 500:
      texto = "Falla inesperada. Intente nuevamente.";
      break;

    default:
      texto = "Falla inesperada con la petici\xF3n. Intente nuevamente.";
      break;
  }

  return texto;
};

errors.mensajeErrorJson = function mensajeErrorJson(erroresJson) {
  //console.log("el tipo de mensaje es:",typeof(erroresJson),erroresJson)
  if (typeof erroresJson == "string") {
    return erroresJson;
  } //recorreo objeto como array


  var msj = "";
  Object.keys(erroresJson).forEach(function (key) {
    //console.log("El key es: -",key,"-")
    if (!isNaN(key)) {
      msj += "<li>".concat(erroresJson[key], "</li>");
    } else {
      msj += "".concat(key, " : ").concat(erroresJson[key], " <br/>");
    }
  });
  return msj;
};

/* harmony default export */ __webpack_exports__["default"] = (errors);

/***/ }),

/***/ 41:
/*!*********************************************************************************!*\
  !*** multi ./resources/js/administrador/modulos/arbol-decisiones/estructura.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\laragon\www\new_system\resources\js\administrador\modulos\arbol-decisiones\estructura.js */"./resources/js/administrador/modulos/arbol-decisiones/estructura.js");


/***/ })

/******/ });